<div class="model-card-content prose md:px-6 md:-mx-6 lg:-mr-20 lg:pr-20 xl:-mr-24 xl:pr-24 2xl:-mr-36 2xl:pr-36 hf-sanitized hf-sanitized-UV6gWNWGvctjlju3oPLl7">
<!-- HTML_TAG_START --><h1 class="relative group flex items-center">
<a class="block pr-1.5 text-lg md:absolute md:p-1.5 md:opacity-0 md:group-hover:opacity-100 md:right-full" href="#roberta-large-model" id="roberta-large-model" rel="nofollow">
<span class="header-link"><svg aria-hidden="true" class="text-gray-500 hover:text-black dark:hover:text-gray-200 w-4" height="1em" preserveaspectratio="xMidYMid meet" role="img" viewbox="0 0 256 256" width="1em" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M167.594 88.393a8.001 8.001 0 0 1 0 11.314l-67.882 67.882a8 8 0 1 1-11.314-11.315l67.882-67.881a8.003 8.003 0 0 1 11.314 0zm-28.287 84.86l-28.284 28.284a40 40 0 0 1-56.567-56.567l28.284-28.284a8 8 0 0 0-11.315-11.315l-28.284 28.284a56 56 0 0 0 79.196 79.197l28.285-28.285a8 8 0 1 0-11.315-11.314zM212.852 43.14a56.002 56.002 0 0 0-79.196 0l-28.284 28.284a8 8 0 1 0 11.314 11.314l28.284-28.284a40 40 0 0 1 56.568 56.567l-28.285 28.285a8 8 0 0 0 11.315 11.314l28.284-28.284a56.065 56.065 0 0 0 0-79.196z" fill="currentColor"></path></svg></span>
</a>
<span>
		RoBERTa large model
	</span>
</h1>
<p>Pretrained model on English language using a masked language modeling (MLM) objective. It was introduced in
<a href="https://arxiv.org/abs/1907.11692" rel="nofollow">this paper</a> and first released in
<a href="https://github.com/pytorch/fairseq/tree/master/examples/roberta" rel="nofollow">this repository</a>. This model is case-sensitive: it
makes a difference between english and English.</p>
<p>Disclaimer: The team releasing RoBERTa did not write a model card for this model so this model card has been written by
the Hugging Face team.</p>
<h2 class="relative group flex items-center">
<a class="block pr-1.5 text-lg md:absolute md:p-1.5 md:opacity-0 md:group-hover:opacity-100 md:right-full" href="#model-description" id="model-description" rel="nofollow">
<span class="header-link"><svg aria-hidden="true" class="text-gray-500 hover:text-black dark:hover:text-gray-200 w-4" height="1em" preserveaspectratio="xMidYMid meet" role="img" viewbox="0 0 256 256" width="1em" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M167.594 88.393a8.001 8.001 0 0 1 0 11.314l-67.882 67.882a8 8 0 1 1-11.314-11.315l67.882-67.881a8.003 8.003 0 0 1 11.314 0zm-28.287 84.86l-28.284 28.284a40 40 0 0 1-56.567-56.567l28.284-28.284a8 8 0 0 0-11.315-11.315l-28.284 28.284a56 56 0 0 0 79.196 79.197l28.285-28.285a8 8 0 1 0-11.315-11.314zM212.852 43.14a56.002 56.002 0 0 0-79.196 0l-28.284 28.284a8 8 0 1 0 11.314 11.314l28.284-28.284a40 40 0 0 1 56.568 56.567l-28.285 28.285a8 8 0 0 0 11.315 11.314l28.284-28.284a56.065 56.065 0 0 0 0-79.196z" fill="currentColor"></path></svg></span>
</a>
<span>
		Model description
	</span>
</h2>
<p>RoBERTa is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. This means
it was pretrained on the raw texts only, with no humans labelling them in any way (which is why it can use lots of
publicly available data) with an automatic process to generate inputs and labels from those texts. </p>
<p>More precisely, it was pretrained with the Masked language modeling (MLM) objective. Taking a sentence, the model
randomly masks 15% of the words in the input then run the entire masked sentence through the model and has to predict
the masked words. This is different from traditional recurrent neural networks (RNNs) that usually see the words one
after the other, or from autoregressive models like GPT which internally mask the future tokens. It allows the model to
learn a bidirectional representation of the sentence.</p>
<p>This way, the model learns an inner representation of the English language that can then be used to extract features
useful for downstream tasks: if you have a dataset of labeled sentences for instance, you can train a standard
classifier using the features produced by the BERT model as inputs.</p>
<h2 class="relative group flex items-center">
<a class="block pr-1.5 text-lg md:absolute md:p-1.5 md:opacity-0 md:group-hover:opacity-100 md:right-full" href="#intended-uses--limitations" id="intended-uses--limitations" rel="nofollow">
<span class="header-link"><svg aria-hidden="true" class="text-gray-500 hover:text-black dark:hover:text-gray-200 w-4" height="1em" preserveaspectratio="xMidYMid meet" role="img" viewbox="0 0 256 256" width="1em" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M167.594 88.393a8.001 8.001 0 0 1 0 11.314l-67.882 67.882a8 8 0 1 1-11.314-11.315l67.882-67.881a8.003 8.003 0 0 1 11.314 0zm-28.287 84.86l-28.284 28.284a40 40 0 0 1-56.567-56.567l28.284-28.284a8 8 0 0 0-11.315-11.315l-28.284 28.284a56 56 0 0 0 79.196 79.197l28.285-28.285a8 8 0 1 0-11.315-11.314zM212.852 43.14a56.002 56.002 0 0 0-79.196 0l-28.284 28.284a8 8 0 1 0 11.314 11.314l28.284-28.284a40 40 0 0 1 56.568 56.567l-28.285 28.285a8 8 0 0 0 11.315 11.314l28.284-28.284a56.065 56.065 0 0 0 0-79.196z" fill="currentColor"></path></svg></span>
</a>
<span>
		Intended uses &amp; limitations
	</span>
</h2>
<p>You can use the raw model for masked language modeling, but it's mostly intended to be fine-tuned on a downstream task.
See the <a href="https://huggingface.co/models?filter=roberta" rel="nofollow">model hub</a> to look for fine-tuned versions on a task that
interests you.</p>
<p>Note that this model is primarily aimed at being fine-tuned on tasks that use the whole sentence (potentially masked)
to make decisions, such as sequence classification, token classification or question answering. For tasks such as text
generation you should look at model like GPT2.</p>
<h3 class="relative group flex items-center">
<a class="block pr-1.5 text-lg md:absolute md:p-1.5 md:opacity-0 md:group-hover:opacity-100 md:right-full" href="#how-to-use" id="how-to-use" rel="nofollow">
<span class="header-link"><svg aria-hidden="true" class="text-gray-500 hover:text-black dark:hover:text-gray-200 w-4" height="1em" preserveaspectratio="xMidYMid meet" role="img" viewbox="0 0 256 256" width="1em" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M167.594 88.393a8.001 8.001 0 0 1 0 11.314l-67.882 67.882a8 8 0 1 1-11.314-11.315l67.882-67.881a8.003 8.003 0 0 1 11.314 0zm-28.287 84.86l-28.284 28.284a40 40 0 0 1-56.567-56.567l28.284-28.284a8 8 0 0 0-11.315-11.315l-28.284 28.284a56 56 0 0 0 79.196 79.197l28.285-28.285a8 8 0 1 0-11.315-11.314zM212.852 43.14a56.002 56.002 0 0 0-79.196 0l-28.284 28.284a8 8 0 1 0 11.314 11.314l28.284-28.284a40 40 0 0 1 56.568 56.567l-28.285 28.285a8 8 0 0 0 11.315 11.314l28.284-28.284a56.065 56.065 0 0 0 0-79.196z" fill="currentColor"></path></svg></span>
</a>
<span>
		How to use
	</span>
</h3>
<p>You can use this model directly with a pipeline for masked language modeling:</p>
<pre><code class="language-python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline
<span class="hljs-meta">&gt;&gt;&gt; </span>unmasker = pipeline(<span class="hljs-string">'fill-mask'</span>, model=<span class="hljs-string">'roberta-large'</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>unmasker(<span class="hljs-string">"Hello I'm a &lt;mask&gt; model."</span>)

[{<span class="hljs-string">'sequence'</span>: <span class="hljs-string">"&lt;s&gt;Hello I'm a male model.&lt;/s&gt;"</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.3317350447177887</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">2943</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġmale'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">"&lt;s&gt;Hello I'm a fashion model.&lt;/s&gt;"</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.14171843230724335</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">2734</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġfashion'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">"&lt;s&gt;Hello I'm a professional model.&lt;/s&gt;"</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.04291723668575287</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">2038</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġprofessional'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">"&lt;s&gt;Hello I'm a freelance model.&lt;/s&gt;"</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.02134818211197853</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">18150</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġfreelance'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">"&lt;s&gt;Hello I'm a young model.&lt;/s&gt;"</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.021098261699080467</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">664</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġyoung'</span>}]
</code></pre>
<p>Here is how to use this model to get the features of a given text in PyTorch:</p>
<pre><code class="language-python"><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> RobertaTokenizer, RobertaModel
tokenizer = RobertaTokenizer.from_pretrained(<span class="hljs-string">'roberta-large'</span>)
model = RobertaModel.from_pretrained(<span class="hljs-string">'roberta-large'</span>)
text = <span class="hljs-string">"Replace me by any text you'd like."</span>
encoded_input = tokenizer(text, return_tensors=<span class="hljs-string">'pt'</span>)
output = model(**encoded_input)
</code></pre>
<p>and in TensorFlow:</p>
<pre><code class="language-python"><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> RobertaTokenizer, TFRobertaModel
tokenizer = RobertaTokenizer.from_pretrained(<span class="hljs-string">'roberta-large'</span>)
model = TFRobertaModel.from_pretrained(<span class="hljs-string">'roberta-large'</span>)
text = <span class="hljs-string">"Replace me by any text you'd like."</span>
encoded_input = tokenizer(text, return_tensors=<span class="hljs-string">'tf'</span>)
output = model(encoded_input)
</code></pre>
<h3 class="relative group flex items-center">
<a class="block pr-1.5 text-lg md:absolute md:p-1.5 md:opacity-0 md:group-hover:opacity-100 md:right-full" href="#limitations-and-bias" id="limitations-and-bias" rel="nofollow">
<span class="header-link"><svg aria-hidden="true" class="text-gray-500 hover:text-black dark:hover:text-gray-200 w-4" height="1em" preserveaspectratio="xMidYMid meet" role="img" viewbox="0 0 256 256" width="1em" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M167.594 88.393a8.001 8.001 0 0 1 0 11.314l-67.882 67.882a8 8 0 1 1-11.314-11.315l67.882-67.881a8.003 8.003 0 0 1 11.314 0zm-28.287 84.86l-28.284 28.284a40 40 0 0 1-56.567-56.567l28.284-28.284a8 8 0 0 0-11.315-11.315l-28.284 28.284a56 56 0 0 0 79.196 79.197l28.285-28.285a8 8 0 1 0-11.315-11.314zM212.852 43.14a56.002 56.002 0 0 0-79.196 0l-28.284 28.284a8 8 0 1 0 11.314 11.314l28.284-28.284a40 40 0 0 1 56.568 56.567l-28.285 28.285a8 8 0 0 0 11.315 11.314l28.284-28.284a56.065 56.065 0 0 0 0-79.196z" fill="currentColor"></path></svg></span>
</a>
<span>
		Limitations and bias
	</span>
</h3>
<p>The training data used for this model contains a lot of unfiltered content from the internet, which is far from
neutral. Therefore, the model can have biased predictions:</p>
<pre><code class="language-python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> transformers <span class="hljs-keyword">import</span> pipeline
<span class="hljs-meta">&gt;&gt;&gt; </span>unmasker = pipeline(<span class="hljs-string">'fill-mask'</span>, model=<span class="hljs-string">'roberta-large'</span>)
<span class="hljs-meta">&gt;&gt;&gt; </span>unmasker(<span class="hljs-string">"The man worked as a &lt;mask&gt;."</span>)

[{<span class="hljs-string">'sequence'</span>: <span class="hljs-string">'&lt;s&gt;The man worked as a mechanic.&lt;/s&gt;'</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.08260300755500793</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">25682</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġmechanic'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">'&lt;s&gt;The man worked as a driver.&lt;/s&gt;'</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.05736079439520836</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">1393</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġdriver'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">'&lt;s&gt;The man worked as a teacher.&lt;/s&gt;'</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.04709019884467125</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">3254</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġteacher'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">'&lt;s&gt;The man worked as a bartender.&lt;/s&gt;'</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.04641604796051979</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">33080</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġbartender'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">'&lt;s&gt;The man worked as a waiter.&lt;/s&gt;'</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.04239227622747421</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">38233</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġwaiter'</span>}]

<span class="hljs-meta">&gt;&gt;&gt; </span>unmasker(<span class="hljs-string">"The woman worked as a &lt;mask&gt;."</span>)

[{<span class="hljs-string">'sequence'</span>: <span class="hljs-string">'&lt;s&gt;The woman worked as a nurse.&lt;/s&gt;'</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.2667474150657654</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">9008</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġnurse'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">'&lt;s&gt;The woman worked as a waitress.&lt;/s&gt;'</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.12280137836933136</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">35698</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġwaitress'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">'&lt;s&gt;The woman worked as a teacher.&lt;/s&gt;'</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.09747499972581863</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">3254</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġteacher'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">'&lt;s&gt;The woman worked as a secretary.&lt;/s&gt;'</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.05783602222800255</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">2971</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġsecretary'</span>},
 {<span class="hljs-string">'sequence'</span>: <span class="hljs-string">'&lt;s&gt;The woman worked as a cleaner.&lt;/s&gt;'</span>,
  <span class="hljs-string">'score'</span>: <span class="hljs-number">0.05576248839497566</span>,
  <span class="hljs-string">'token'</span>: <span class="hljs-number">16126</span>,
  <span class="hljs-string">'token_str'</span>: <span class="hljs-string">'Ġcleaner'</span>}]
</code></pre>
<p>This bias will also affect all fine-tuned versions of this model.</p>
<h2 class="relative group flex items-center">
<a class="block pr-1.5 text-lg md:absolute md:p-1.5 md:opacity-0 md:group-hover:opacity-100 md:right-full" href="#training-data" id="training-data" rel="nofollow">
<span class="header-link"><svg aria-hidden="true" class="text-gray-500 hover:text-black dark:hover:text-gray-200 w-4" height="1em" preserveaspectratio="xMidYMid meet" role="img" viewbox="0 0 256 256" width="1em" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M167.594 88.393a8.001 8.001 0 0 1 0 11.314l-67.882 67.882a8 8 0 1 1-11.314-11.315l67.882-67.881a8.003 8.003 0 0 1 11.314 0zm-28.287 84.86l-28.284 28.284a40 40 0 0 1-56.567-56.567l28.284-28.284a8 8 0 0 0-11.315-11.315l-28.284 28.284a56 56 0 0 0 79.196 79.197l28.285-28.285a8 8 0 1 0-11.315-11.314zM212.852 43.14a56.002 56.002 0 0 0-79.196 0l-28.284 28.284a8 8 0 1 0 11.314 11.314l28.284-28.284a40 40 0 0 1 56.568 56.567l-28.285 28.285a8 8 0 0 0 11.315 11.314l28.284-28.284a56.065 56.065 0 0 0 0-79.196z" fill="currentColor"></path></svg></span>
</a>
<span>
		Training data
	</span>
</h2>
<p>The RoBERTa model was pretrained on the reunion of five datasets:</p>
<ul>
<li><a href="https://yknzhu.wixsite.com/mbweb" rel="nofollow">BookCorpus</a>, a dataset consisting of 11,038 unpublished books;</li>
<li><a href="https://en.wikipedia.org/wiki/English_Wikipedia" rel="nofollow">English Wikipedia</a> (excluding lists, tables and headers) ;</li>
<li><a href="https://commoncrawl.org/2016/10/news-dataset-available/" rel="nofollow">CC-News</a>, a dataset containing 63 millions English news
articles crawled between September 2016 and February 2019.</li>
<li><a href="https://github.com/jcpeterson/openwebtext" rel="nofollow">OpenWebText</a>, an opensource recreation of the WebText dataset used to
train GPT-2,</li>
<li><a href="https://arxiv.org/abs/1806.02847" rel="nofollow">Stories</a> a dataset containing a subset of CommonCrawl data filtered to match the
story-like style of Winograd schemas.</li>
</ul>
<p>Together theses datasets weight 160GB of text.</p>
<h2 class="relative group flex items-center">
<a class="block pr-1.5 text-lg md:absolute md:p-1.5 md:opacity-0 md:group-hover:opacity-100 md:right-full" href="#training-procedure" id="training-procedure" rel="nofollow">
<span class="header-link"><svg aria-hidden="true" class="text-gray-500 hover:text-black dark:hover:text-gray-200 w-4" height="1em" preserveaspectratio="xMidYMid meet" role="img" viewbox="0 0 256 256" width="1em" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M167.594 88.393a8.001 8.001 0 0 1 0 11.314l-67.882 67.882a8 8 0 1 1-11.314-11.315l67.882-67.881a8.003 8.003 0 0 1 11.314 0zm-28.287 84.86l-28.284 28.284a40 40 0 0 1-56.567-56.567l28.284-28.284a8 8 0 0 0-11.315-11.315l-28.284 28.284a56 56 0 0 0 79.196 79.197l28.285-28.285a8 8 0 1 0-11.315-11.314zM212.852 43.14a56.002 56.002 0 0 0-79.196 0l-28.284 28.284a8 8 0 1 0 11.314 11.314l28.284-28.284a40 40 0 0 1 56.568 56.567l-28.285 28.285a8 8 0 0 0 11.315 11.314l28.284-28.284a56.065 56.065 0 0 0 0-79.196z" fill="currentColor"></path></svg></span>
</a>
<span>
		Training procedure
	</span>
</h2>
<h3 class="relative group flex items-center">
<a class="block pr-1.5 text-lg md:absolute md:p-1.5 md:opacity-0 md:group-hover:opacity-100 md:right-full" href="#preprocessing" id="preprocessing" rel="nofollow">
<span class="header-link"><svg aria-hidden="true" class="text-gray-500 hover:text-black dark:hover:text-gray-200 w-4" height="1em" preserveaspectratio="xMidYMid meet" role="img" viewbox="0 0 256 256" width="1em" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M167.594 88.393a8.001 8.001 0 0 1 0 11.314l-67.882 67.882a8 8 0 1 1-11.314-11.315l67.882-67.881a8.003 8.003 0 0 1 11.314 0zm-28.287 84.86l-28.284 28.284a40 40 0 0 1-56.567-56.567l28.284-28.284a8 8 0 0 0-11.315-11.315l-28.284 28.284a56 56 0 0 0 79.196 79.197l28.285-28.285a8 8 0 1 0-11.315-11.314zM212.852 43.14a56.002 56.002 0 0 0-79.196 0l-28.284 28.284a8 8 0 1 0 11.314 11.314l28.284-28.284a40 40 0 0 1 56.568 56.567l-28.285 28.285a8 8 0 0 0 11.315 11.314l28.284-28.284a56.065 56.065 0 0 0 0-79.196z" fill="currentColor"></path></svg></span>
</a>
<span>
		Preprocessing
	</span>
</h3>
<p>The texts are tokenized using a byte version of Byte-Pair Encoding (BPE) and a vocabulary size of 50,000. The inputs of
the model take pieces of 512 contiguous token that may span over documents. The beginning of a new document is marked
with <code>&lt;s&gt;</code> and the end of one by <code>&lt;/s&gt;</code></p>
<p>The details of the masking procedure for each sentence are the following:</p>
<ul>
<li><p>15% of the tokens are masked.</p>
</li>
<li><p>In 80% of the cases, the masked tokens are replaced by <code>&lt;mask&gt;</code>.</p>
</li>
<li><p>In 10% of the cases, the masked tokens are replaced by a random token (different) from the one they replace.</p>
</li>
<li><p>In the 10% remaining cases, the masked tokens are left as is.</p>
</li>
</ul>
<p>Contrary to BERT, the masking is done dynamically during pretraining (e.g., it changes at each epoch and is not fixed).</p>
<h3 class="relative group flex items-center">
<a class="block pr-1.5 text-lg md:absolute md:p-1.5 md:opacity-0 md:group-hover:opacity-100 md:right-full" href="#pretraining" id="pretraining" rel="nofollow">
<span class="header-link"><svg aria-hidden="true" class="text-gray-500 hover:text-black dark:hover:text-gray-200 w-4" height="1em" preserveaspectratio="xMidYMid meet" role="img" viewbox="0 0 256 256" width="1em" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M167.594 88.393a8.001 8.001 0 0 1 0 11.314l-67.882 67.882a8 8 0 1 1-11.314-11.315l67.882-67.881a8.003 8.003 0 0 1 11.314 0zm-28.287 84.86l-28.284 28.284a40 40 0 0 1-56.567-56.567l28.284-28.284a8 8 0 0 0-11.315-11.315l-28.284 28.284a56 56 0 0 0 79.196 79.197l28.285-28.285a8 8 0 1 0-11.315-11.314zM212.852 43.14a56.002 56.002 0 0 0-79.196 0l-28.284 28.284a8 8 0 1 0 11.314 11.314l28.284-28.284a40 40 0 0 1 56.568 56.567l-28.285 28.285a8 8 0 0 0 11.315 11.314l28.284-28.284a56.065 56.065 0 0 0 0-79.196z" fill="currentColor"></path></svg></span>
</a>
<span>
		Pretraining
	</span>
</h3>
<p>The model was trained on 1024 V100 GPUs for 500K steps with a batch size of 8K and a sequence length of 512. The
optimizer used is Adam with a learning rate of 4e-4, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><msub><mi>β</mi><mn>1</mn></msub><mo>=</mo><mn>0.9</mn></mrow>\beta_{1} = 0.9</math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.9</span></span></span></span>, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><msub><mi>β</mi><mn>2</mn></msub><mo>=</mo><mn>0.98</mn></mrow>\beta_{2} = 0.98</math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.98</span></span></span></span> and
 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><mrow><mi>ϵ</mi><mo>=</mo><mn>1</mn><mi>e</mi><mo>−</mo><mn>6</mn></mrow>\epsilon = 1e-6</math></span><span aria-hidden="true" class="katex-html"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6</span></span></span></span>, a weight decay of 0.01, learning rate warmup for 30,000 steps and linear decay of the learning
rate after.</p>
<h2 class="relative group flex items-center">
<a class="block pr-1.5 text-lg md:absolute md:p-1.5 md:opacity-0 md:group-hover:opacity-100 md:right-full" href="#evaluation-results" id="evaluation-results" rel="nofollow">
<span class="header-link"><svg aria-hidden="true" class="text-gray-500 hover:text-black dark:hover:text-gray-200 w-4" height="1em" preserveaspectratio="xMidYMid meet" role="img" viewbox="0 0 256 256" width="1em" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M167.594 88.393a8.001 8.001 0 0 1 0 11.314l-67.882 67.882a8 8 0 1 1-11.314-11.315l67.882-67.881a8.003 8.003 0 0 1 11.314 0zm-28.287 84.86l-28.284 28.284a40 40 0 0 1-56.567-56.567l28.284-28.284a8 8 0 0 0-11.315-11.315l-28.284 28.284a56 56 0 0 0 79.196 79.197l28.285-28.285a8 8 0 1 0-11.315-11.314zM212.852 43.14a56.002 56.002 0 0 0-79.196 0l-28.284 28.284a8 8 0 1 0 11.314 11.314l28.284-28.284a40 40 0 0 1 56.568 56.567l-28.285 28.285a8 8 0 0 0 11.315 11.314l28.284-28.284a56.065 56.065 0 0 0 0-79.196z" fill="currentColor"></path></svg></span>
</a>
<span>
		Evaluation results
	</span>
</h2>
<p>When fine-tuned on downstream tasks, this model achieves the following results:</p>
<p>Glue test results:</p>
<div class="max-w-full overflow-auto">
<table>
<thead><tr>
<th align="center">Task</th>
<th align="center">MNLI</th>
<th align="center">QQP</th>
<th align="center">QNLI</th>
<th align="center">SST-2</th>
<th align="center">CoLA</th>
<th align="center">STS-B</th>
<th align="center">MRPC</th>
<th align="center">RTE</th>
</tr>
</thead><tbody><tr>
<td align="center"></td>
<td align="center">90.2</td>
<td align="center">92.2</td>
<td align="center">94.7</td>
<td align="center">96.4</td>
<td align="center">68.0</td>
<td align="center">96.4</td>
<td align="center">90.9</td>
<td align="center">86.6</td>
</tr>
</tbody>
</table>
</div>
<h3 class="relative group flex items-center">
<a class="block pr-1.5 text-lg md:absolute md:p-1.5 md:opacity-0 md:group-hover:opacity-100 md:right-full" href="#bibtex-entry-and-citation-info" id="bibtex-entry-and-citation-info" rel="nofollow">
<span class="header-link"><svg aria-hidden="true" class="text-gray-500 hover:text-black dark:hover:text-gray-200 w-4" height="1em" preserveaspectratio="xMidYMid meet" role="img" viewbox="0 0 256 256" width="1em" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M167.594 88.393a8.001 8.001 0 0 1 0 11.314l-67.882 67.882a8 8 0 1 1-11.314-11.315l67.882-67.881a8.003 8.003 0 0 1 11.314 0zm-28.287 84.86l-28.284 28.284a40 40 0 0 1-56.567-56.567l28.284-28.284a8 8 0 0 0-11.315-11.315l-28.284 28.284a56 56 0 0 0 79.196 79.197l28.285-28.285a8 8 0 1 0-11.315-11.314zM212.852 43.14a56.002 56.002 0 0 0-79.196 0l-28.284 28.284a8 8 0 1 0 11.314 11.314l28.284-28.284a40 40 0 0 1 56.568 56.567l-28.285 28.285a8 8 0 0 0 11.315 11.314l28.284-28.284a56.065 56.065 0 0 0 0-79.196z" fill="currentColor"></path></svg></span>
</a>
<span>
		BibTeX entry and citation info
	</span>
</h3>
<pre><code class="language-bibtex">@article{DBLP:journals/corr/abs-1907-11692,
  author    = {Yinhan Liu and
               Myle Ott and
               Naman Goyal and
               Jingfei Du and
               Mandar Joshi and
               Danqi Chen and
               Omer Levy and
               Mike Lewis and
               Luke Zettlemoyer and
               Veselin Stoyanov},
  title     = {RoBERTa: {A} Robustly Optimized {BERT} Pretraining Approach},
  journal   = {CoRR},
  volume    = {abs/1907.11692},
  year      = {2019},
  url       = {http://arxiv.org/abs/1907.11692},
  archivePrefix = {arXiv},
  eprint    = {1907.11692},
  timestamp = {Thu, 01 Aug 2019 08:59:33 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1907-11692.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
</code></pre>
<a href="https://huggingface.co/exbert/?model=roberta-base">
<img src="https://cdn-media.huggingface.co/exbert/button.png" width="300px"/>
</a>
<!-- HTML_TAG_END --></div>